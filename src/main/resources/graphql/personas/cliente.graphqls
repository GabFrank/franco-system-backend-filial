type Cliente {
    id:ID!
    tipo: TipoCliente
    persona: Persona
    nombre: String
    documento: String
    credito: Float
    creadoEn: Date
    contactos: [Contacto]
    usuario: Usuario
    codigo: String
}

input ClienteInput {
    id:ID
    tipo: TipoCliente
    nombre: String
    documento: String
    direccion: String
    personaId: Int
    credito: Float
    codigo: String
    usuarioId: Int
}

extend type Query {
    cliente(id:ID!):Cliente
    clientePorPersonaId(id:ID): Cliente
    clientePorPersona(texto:String): [Cliente]
    clientePorPersonaDocumento(texto:String): Cliente
    clientePorTelefono(texto:String): [Cliente]
    clientes(page:Int = 0, size:Int = 10):[Cliente]!
    countCliente: Int
}

extend type Mutation {
    saveCliente(cliente:ClienteInput!):Cliente!
    deleteCliente(id:ID!):Boolean!
}

enum TipoCliente {
    NORMAL,
    ASOCIADO,
    CONVENIADO,
    FUNCIONARIO,
    VIP
}

